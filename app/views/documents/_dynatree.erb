<script type="text/javascript">
	$(function(){
		$( "#menu" ).menu();
		// Initialize the tree inside the <div>element.
		// The tree structure is read from the contained <ul> tag.
		$("#tree").dynatree({
			title: "Programming Sample",
			onActivate: function(node) {
				$("#echoActive").text(node.data.title);
//				alert(node.getKeyPath());
				if( node.data.url )
					window.open(node.data.url, node.data.target);
			},
			onDeactivate: function(node) {
				$("#echoSelected").text("-");
			},
			onFocus: function(node) {
				$("#echoFocused").text(node.data.title);
			},
			onBlur: function(node) {
				$("#echoFocused").text("-");
			},
			onLazyRead: function(node){
				var fakeJsonResult = [
					{ title: 'Lazy node 1', isLazy: true },
					{ title: 'Simple node 2', select: true }
				];
//				alert ("Let's pretend we're using this AJAX response to load the branch:\n " + jsonResult);
				function fakeAjaxResponse() {
					return function() {
						node.addChild(fakeJsonResult);
						// Remove the 'loading...' status:
						node.setLazyNodeStatus(DTNodeStatus_Ok);
					};
				}
				window.setTimeout(fakeAjaxResponse(), 1500);
			}
		});

		$("#btnAddCode").click(function(){
			// Sample: add an hierarchic branch using code.
			// This is how we would add tree nodes programatically
			var rootNode = $("#tree").dynatree("getRoot");
			var childNode = rootNode.addChild({
				title: "Programatically addded nodes",
				tooltip: "This folder and all child nodes were added programmatically.",
				isFolder: true
			});
			childNode.addChild({
				title: "Document using a custom icon",
				icon: "customdoc1.gif"
			});
		});
		
		
		$("#btnAddFile").click(function(){
			
			var node = $("#tree").dynatree("getActiveNode");
			
			if(node){
				
			} else {
				node = $("#tree").dynatree("getRoot");
				
			}
			
			// Sample: add an hierarchic branch using code.
			// This is how we would add tree nodes programatically
			var childNode = node.addChild({
				title: "Programatically addded nodes",
				tooltip: "This folder and all child nodes were added programmatically.",
				isFolder: false
			});
		});
		
		

		$("#btnAddObject").click(function(){
			// Sample: add an hierarchic branch using an array
			var obj = [
				{ title: 'Lazy node 1', isLazy: true },
				{ title: 'Lazy node 2', isLazy: true },
				{ title: 'Folder node 3', isFolder: true,
					children: [
						{ title: 'node 3.1' },
						{ title: 'node 3.2',
							children: [
								{ title: 'node 3.2.1' },
								{ title: 'node 3.2.2',
									children: [
										{ title: 'node 3.2.2.1' }
									]
								}
							]
						}
					]
				}
			];
			$("#tree").dynatree("getRoot").addChild(obj);
		});

		$("#btnActiveNode").click(function(){
			$("#tree").dynatree("getTree").activateKey("id4.3.2");
//			$("#tree").dynatree("getTree").getNodeByKey("id4.3.2").activate();
		});
		$("#btnSetTitle").click(function(){
			var node = $("#tree").dynatree("getActiveNode");
			if( !node ) return;
			node.setTitle(node.data.title + ", " + new Date());
			// this is a shortcut for
			// node.fromDict({title: node.data.title + new Date()});
		});
		$("#btnFromDict").click(function(){
			var node = $("#tree").dynatree("getActiveNode");
			if( !node ) return;
//			alert(JSON.stringify(node.toDict(true)));
			// Set node data and - optionally - replace children
			node.fromDict({
				title: node.data.title + new Date(),
				children: [{title: "t1"}, {title: "t2"}]
			});
		});

		$("#btnShowActive").click(function(){
			var node = $("#tree").dynatree("getActiveNode");
			if( node ){
				alert("Currently active: " + node.data.title);
			}else{
				alert("No active node.");
			}
		});

		$("#btnDisable").toggle(function(){
				$("#tree").dynatree("disable");
				$(this).text("Enable");
				return false;
			}, function(){
				$("#tree").dynatree("enable");
				$(this).text("Disable");
				return false;
			});
		$("#btnToggleExpand").click(function(){
			$("#tree").dynatree("getRoot").visit(function(node){
				node.toggleExpand();
			});
			return false;
		});
		$("#btnCollapseAll").click(function(){
			$("#tree").dynatree("getRoot").visit(function(node){
				node.expand(false);
			});
			return false;
		});
		$("#btnExpandAll").click(function(){
			$("#tree").dynatree("getRoot").visit(function(node){
				node.expand(true);
			});
			return false;
		});
		$("#btnSortActive").click(function(){
			var node = $("#tree").dynatree("getActiveNode");
			// Custom compare function (optional) that sorts case insensitive
			var cmp = function(a, b) {
				a = a.data.title.toLowerCase();
				b = b.data.title.toLowerCase();
				return a > b ? 1 : a < b ? -1 : 0;
			};
			node.sortChildren(cmp, false);
		});
		$("#btnSortAll").click(function(){
			var node = $("#tree").dynatree("getRoot");
			node.sortChildren(null, true);
		});
	});
</script>


 
    <div id="tree">
		<ul>
			
			<li id="id3" class="folder">prep
				
				<ul>
				<% @documents.each do |document| %>
					<% if document.research_phase == 'prep' %>
					<li id="id3.1"><%=document.title%></li>
					<%end%>
				 <% end %>
				 </ul>
			</li>
			
			
			<li id="id3" class="folder">col
				
				<ul>
				<% @documents.each do |document| %>
					<% if document.research_phase == 'col' %>
					<li id="id3.1"><%=document.title%></li>
					<%end%>
				 <% end %>
				 </ul>
				
				
			</li>
			
			<li id="id3" class="folder">analyse<ul>
				<% @documents.each do |document| %>
					<% if document.research_phase == 'analyse' %>
					<li id="id3.1"><%=document.title%></li>
					<%end%>
				 <% end %>
				 </ul>
				
			</li>
			
		</ul>
	</div>
	
	
	
	<!--
	<ul id="menu">
		<li class="ui-state-disabled"><a href="#">Aberdeen</a></li>
		<li><a href="#">Ada</a></li>
		<li><a href="#">Adamsville</a></li>
		<li><a href="#">Addyston</a></li>
		<li>
			<a href="#">Delphi</a>
			<ul>
				<li class="ui-state-disabled"><a href="#">Ada</a></li>
				<li><a href="#">Saarland</a></li>
				<li><a href="#">Salzburg</a></li>
			</ul>	
		</li>
		<li><a href="#">Saarland</a></li>
			<li>
				<a href="#">Salzburg</a>
				<ul>
					<li>
						<a href="#">Delphi</a>
						<ul>
							<li><a href="#">Ada</a></li>
							<li><a href="#">Saarland</a></li>
							<li><a href="#">Salzburg</a></li>
						</ul>
					</li>
					<li>
						<a href="#">Delphi</a>
						<ul>
							<li><a href="#">Ada</a></li>
							<li><a href="#">Saarland</a></li>
							<li><a href="#">Salzburg</a></li>
						</ul>
					</li>
					<li><a href="#">Perch</a></li>
				</ul>
			</li>
			<li class="ui-state-disabled"><a href="#">Amesville</a></li>
	</ul>
	-->  
	
	
	
	
	
	
	
	
	<div>Active node: <span id="echoActive">-</span></div>
	<div>Focused node: <span id="echoFocused">-</span></div>
	<p>
		<button id="btnAddCode">Add nodes programmatically</button>
		<button id="btnAddObject">Add nodes using arrays</button>
		<button id="btnActiveNode">Activate item id4.3.2</button>
		<button id="btnShowActive">Show active node...</button>
		<button id="btnSetTitle">Set active node title</button>
		<button id="btnFromDict">Modify active node fom dict</button>
		<button id="btnAddFile">Add file into current node</button>
	</p>
	<!-- Start_Exclude: This block is not part of the sample code -->
	<hr>

	



